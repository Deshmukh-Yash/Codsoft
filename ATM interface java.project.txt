import java.util.Scanner;

class BankAccount {
    private double balance;

    // Constructor to initialize the bank account with a balance
    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }

    // Method to withdraw money from the account
    public String withdraw(double amount) {
        if (amount <= 1000) {
            return "Invalid withdrawal amount.";
        }
        if (amount > balance) {
            return "Insufficient funds.";
        }
        balance -= amount;
        return "Successfully withdrawn: " + amount + ". New balance: " + balance;
    }

    // Method to deposit money into the account
    public String deposit(double amount) {
        if (amount <= 0) {
            return "Invalid deposit amount.";
        }
        balance += amount;
        return "Successfully deposited: " + amount + ". New balance: " + balance;
    }

    // Method to check the current balance of the account
    public String checkBalance() {
        return "Current balance: " + balance;
    }
}

class ATM {
    private BankAccount bankAccount;
    private Scanner scanner;

    // Constructor to initialize the ATM with a bank account
    public ATM(BankAccount account) {
        this.bankAccount = account;
        this.scanner = new Scanner(System.in);
    }

    // Method to display the ATM menu
    public void displayMenu() {
        System.out.println("\nATM Menu:");
        System.out.println("1. Withdraw");
        System.out.println("2. Deposit");
        System.out.println("3. Check Balance");
        System.out.println("4. Exit");
    }

    // Method to execute the chosen ATM option
    public void executeOption(int option) {
        switch (option) {
            case 1:
                withdraw();
                break;
            case 2:
                deposit();
                break;
            case 3:
                checkBalance();
                break;
            case 4:
                System.out.println("Thank you for using the ATM. Goodbye!");
                System.exit(0);
                break;
            default:
                System.out.println("Invalid option, please try again.");
        }
    }

    // Method to handle withdrawal from the account
    private void withdraw() {
        System.out.print("Enter the amount to withdraw: ");
        try {
            double amount = scanner.nextDouble();
            String result = bankAccount.withdraw(amount);
            System.out.println(result);
        } catch (Exception e) {
            System.out.println("Invalid input, please enter a valid number.");
            scanner.next(); // Clear the invalid input
        }
    }

    // Method to handle deposit into the account
    private void deposit() {
        System.out.print("Enter the amount to deposit: ");
        try {
            double amount = scanner.nextDouble();
            String result = bankAccount.deposit(amount);
            System.out.println(result);
        } catch (Exception e) {
            System.out.println("Invalid input, please enter a valid number.");
            scanner.next(); // Clear the invalid input
        }
    }

    // Method to check the current balance of the account
    private void checkBalance() {
        System.out.println(bankAccount.checkBalance());
    }

    // Method to run the ATM program in a loop
    public void run() {
        while (true) {
            displayMenu();
            System.out.print("Choose an option (1-4): ");
            try {
                int option = scanner.nextInt();
                executeOption(option);
            } catch (Exception e) {
                System.out.println("Invalid input, please enter a number between 1 and 4.");
                scanner.next(); // Clear the invalid input
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Initialize a bank account with an initial balance of 1000
        BankAccount account = new BankAccount(1000);

        // Initialize the ATM with the bank account
        ATM atm = new ATM(account);

        // Run the ATM system
        atm.run();
    }
}
